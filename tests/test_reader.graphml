<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">

<key id="gFormat" for="graphml" attr.name="format"
    attr.type="string"/>
<key id="dName" for="node" attr.name="name" attr.type="string"/>
<key id="dVertex" for="node" attr.name="vertex" attr.type="string"/>
<key id="dStateMachine" for="graph" attr.name="stateMachine" attr.type="string"/>
<key id="dGeometry" for="node" attr.name="geometry"/>
<key id="dLabelGeometry" for="edge" attr.name="labelGeometry"/>
<key id="dPivot" for="edge" attr.name="pivot" attr.type="string"/>
<key id="dNote" for="node" attr.name="note" attr.type="string"/>
<key id="dData" for="node" attr.name="data" attr.type="string"/>
<key id="dData" for="edge" attr.name="data" attr.type="string"/>
<key id="dColor" for="edge" attr.name="color" attr.type="string"/>

<data key="gFormat">Cyberiada-GraphML-1.0</data>

<graph id="G" edgedefault="directed">
    <data key="dStateMachine"/>
    <node id="coreMeta">
        <data key="dNote">formal</data>
        <data key="dName">CGML_META</data>
        <data key="dData">platform/ ArduinoUno

standardVersion/ 1.0

name/ Arduino Blinker

author/ Lapki IDE TEAM

description/ Включение и выключение лампочки по таймеру
        </data>
    </node>
    <node id="cLED1">
        <data key="dNote">formal</data>
        <data key="dName"> CGML_COMPONENT </data>
        <data key="dData">id/ Reader1

type/ Reader

name/ Светодиод

description/ Встроенный в плату светодиод, чтобы им мигать

pin/ 12

        </data>
    </node>

    <node id="ctimer1">
        <data key="dNote">formal</data>
        <data key="dName"> CGML_COMPONENT </data>
        <data key="dData">id/ Impulse1

type/ Impulse

name/ Таймер

description/ Программный таймер.

        </data>
    </node>

    <node id="init">
        <data key="dVertex">initial</data>
        <data key="dGeometry"> 
            <point x="20" y="30"> </point>
        </data>
    </node>

   <node id="diod1">
        <data key="dName">Включен</data>
        <data key="dData">entry/
Reader1.read()

Reader1.char_accepted[Reader1.current_char == A]/
Impulse1.impulseA()
Reader1.read()

Reader1.char_accepted[else]/
Reader1.read()

        </data>
        <data key="dGeometry">
            <rect x="82" y="57" width="450.0" height="95"/>
        </data>
    </node>

    <node id="commentX">
        <data key="dNote"/>
        <data key="dData"> Включение и выключение лампочки по таймеру! </data>
        <data key="dGeometry">
            <point x="640" y="114" />
        </data> 
    </node>
    <edge id="init-edge" source="init" target="diod1"/>
    <edge id="edge0" source="coreMeta" target="ctimer1"> 
        <data key="dPivot"/>
    </edge>
    <edge id="edge1" source="coreMeta" target="cLED1">
        <data key="dPivot"/>
    </edge>
</graph>

</graphml>